translation block start (guest address 0x8a84)
host load (32bit) 3 (temporary) <- read(env (global), offset=18446744073709551600, bit_width=32)
move immediate (32bit) 4 (temporary) <- 0
branch conditional (32bit) 0 if 3 (temporary) (signed)< 4 (temporary)
instruction start
move immediate (32bit) 3 (temporary) <- 0
move (32bit) r11 (global) <- 3 (temporary)
instruction start
move immediate (32bit) 3 (temporary) <- 0
move (32bit) r14 (global) <- 3 (temporary)
instruction start
move (32bit) 3 (temporary) <- r13 (global)
move (32bit) 5 (temporary) <- 3 (temporary)
guest load (32bit) 4 (temporary) <- load(address=5 (temporary), width_bits=32, align_bytes=1, byte_swap=false)
move immediate (32bit) 5 (temporary) <- 4
binary arithmetic (32bit) 3 (temporary) <- 3 (temporary) + 5 (temporary)
move (32bit) r13 (global) <- 3 (temporary)
move (32bit) r1 (global) <- 4 (temporary)
instruction start
move (32bit) 3 (temporary) <- r13 (global)
move (32bit) r2 (global) <- 3 (temporary)
instruction start
move immediate (32bit) 4 (temporary) <- 18446744073709551612
binary arithmetic (32bit) 3 (temporary) <- r13 (global) + 4 (temporary)
move (32bit) 4 (temporary) <- r2 (global)
move (32bit) 5 (temporary) <- 3 (temporary)
guest store (32bit) store(address=5 (temporary), width_bits=32, align_bytes=1, bytes_swap=false) <- 4 (temporary)
move (32bit) r13 (global) <- 3 (temporary)
instruction start
move immediate (32bit) 4 (temporary) <- 18446744073709551612
binary arithmetic (32bit) 3 (temporary) <- r13 (global) + 4 (temporary)
move (32bit) 4 (temporary) <- r0 (global)
move (32bit) 5 (temporary) <- 3 (temporary)
guest store (32bit) store(address=5 (temporary), width_bits=32, align_bytes=1, bytes_swap=false) <- 4 (temporary)
move (32bit) r13 (global) <- 3 (temporary)
instruction start
move immediate (32bit) 3 (temporary) <- 35508
move (32bit) 5 (temporary) <- 3 (temporary)
guest load (32bit) 4 (temporary) <- load(address=5 (temporary), width_bits=32, align_bytes=1, byte_swap=false)
move (32bit) r12 (global) <- 4 (temporary)
instruction start
move immediate (32bit) 4 (temporary) <- 18446744073709551612
binary arithmetic (32bit) 3 (temporary) <- r13 (global) + 4 (temporary)
move (32bit) 4 (temporary) <- r12 (global)
move (32bit) 5 (temporary) <- 3 (temporary)
guest store (32bit) store(address=5 (temporary), width_bits=32, align_bytes=1, bytes_swap=false) <- 4 (temporary)
move (32bit) r13 (global) <- 3 (temporary)
instruction start
move immediate (32bit) 3 (temporary) <- 35512
move (32bit) 5 (temporary) <- 3 (temporary)
guest load (32bit) 4 (temporary) <- load(address=5 (temporary), width_bits=32, align_bytes=1, byte_swap=false)
move (32bit) r0 (global) <- 4 (temporary)
instruction start
move immediate (32bit) 3 (temporary) <- 35516
move (32bit) 5 (temporary) <- 3 (temporary)
guest load (32bit) 4 (temporary) <- load(address=5 (temporary), width_bits=32, align_bytes=1, byte_swap=false)
move (32bit) r3 (global) <- 4 (temporary)
instruction start
goto block 0
move immediate (32bit) pc (global, program counter) <- 942992
exit block (started at 0x8a84)
set label 0
exit block (started at 0x8a84)
translation block start (guest address 0x8ab0)
host load (32bit) 3 (temporary) <- read(env (global), offset=18446744073709551600, bit_width=32)
move immediate (32bit) 4 (temporary) <- 0
branch conditional (32bit) 0 if 3 (temporary) (signed)< 4 (temporary)
instruction start
move immediate (32bit) r14 (global) <- 35508
goto block 0
move immediate (32bit) pc (global, program counter) <- 925104
exit block (started at 0x8ab0)
set label 0
exit block (started at 0x8ab0)
translation block start (guest address 0x8ab4)
host load (32bit) 3 (temporary) <- read(env (global), offset=18446744073709551600, bit_width=32)
move immediate (32bit) 4 (temporary) <- 0
branch conditional (32bit) 0 if 3 (temporary) (signed)< 4 (temporary)
instruction start
move immediate (32bit) 3 (temporary) <- 0
branch conditional (32bit) 1 if ZF (global) != 3 (temporary)
move (32bit) 3 (temporary) <- r3 (global)
move (32bit) 4 (temporary) <- r4 (global)
extend (32bit) 5 (temporary) <- extend(3 (temporary), 8 bits, unsigned)
move immediate (32bit) 6 (temporary) <- 31
move conditional (32bit) 5 (temporary) <- 5 (temporary) (unsigned)> 6 (temporary) ? 6 (temporary) : 5 (temporary)
binary arithmetic (32bit) 4 (temporary) <- 4 (temporary) sar 5 (temporary)
move immediate (32bit) 3 (temporary) <- 35516
binary arithmetic (32bit) 3 (temporary) <- 3 (temporary) & 4 (temporary)
move (32bit) r0 (global) <- 3 (temporary)
set label 1
instruction start
move immediate (32bit) 3 (temporary) <- 0
branch conditional (32bit) 2 if ZF (global) != 3 (temporary)
move (32bit) 3 (temporary) <- r0 (global)
move immediate (32bit) 4 (temporary) <- 5
binary arithmetic (32bit) 3 (temporary) <- 3 (temporary) << 4 (temporary)
move (32bit) 4 (temporary) <- r0 (global)
binary arithmetic (32bit) 4 (temporary) <- 4 (temporary) & 3 (temporary)
move (32bit) r9 (global) <- 4 (temporary)
set label 2
instruction start
move immediate (32bit) 3 (temporary) <- 0
branch conditional (32bit) 3 if ZF (global) != 3 (temporary)
move (32bit) 3 (temporary) <- r0 (global)
move (32bit) 5 (temporary) <- 3 (temporary)
guest load (32bit) 4 (temporary) <- load(address=5 (temporary), width_bits=32, align_bytes=1, byte_swap=false)
move (32bit) r8 (global) <- 4 (temporary)
move immediate (32bit) 4 (temporary) <- 4
binary arithmetic (32bit) 3 (temporary) <- 3 (temporary) + 4 (temporary)
move (32bit) 5 (temporary) <- 3 (temporary)
guest load (32bit) 4 (temporary) <- load(address=5 (temporary), width_bits=32, align_bytes=1, byte_swap=false)
move (32bit) r9 (global) <- 4 (temporary)
move (32bit) 4 (temporary) <- r4 (global)
binary arithmetic (32bit) 3 (temporary) <- 3 (temporary) - 4 (temporary)
move immediate (32bit) 4 (temporary) <- 18446744073709551612
binary arithmetic (32bit) 3 (temporary) <- 3 (temporary) + 4 (temporary)
move (32bit) r0 (global) <- 3 (temporary)
set label 3
instruction start
move immediate (32bit) 4 (temporary) <- 18446744073709551612
binary arithmetic (32bit) 3 (temporary) <- r13 (global) + 4 (temporary)
move (32bit) 4 (temporary) <- r14 (global)
move (32bit) 5 (temporary) <- 3 (temporary)
guest store (32bit) store(address=5 (temporary), width_bits=32, align_bytes=1, bytes_swap=false) <- 4 (temporary)
move (32bit) r13 (global) <- 3 (temporary)
instruction start
move immediate (32bit) 3 (temporary) <- 4
move (32bit) 4 (temporary) <- r13 (global)
binary arithmetic (32bit) 4 (temporary) <- 4 (temporary) - 3 (temporary)
move (32bit) r13 (global) <- 4 (temporary)
instruction start
goto block 0
move immediate (32bit) pc (global, program counter) <- 35556
exit block (started at 0x8ab4)
set label 0
exit block (started at 0x8ab4)
translation block start (guest address 0x8acc)
host load (32bit) 3 (temporary) <- read(env (global), offset=18446744073709551600, bit_width=32)
move immediate (32bit) 4 (temporary) <- 0
branch conditional (32bit) 0 if 3 (temporary) (signed)< 4 (temporary)
instruction start
move immediate (32bit) 4 (temporary) <- 18446744073709551615
binary arithmetic (32bit) 3 (temporary) <- r1 (global) + 4 (temporary)
move (32bit) 5 (temporary) <- 3 (temporary)
guest load (32bit) 4 (temporary) <- load(address=5 (temporary), width_bits=8, align_bytes=1, byte_swap=false)
move (32bit) r2 (global) <- 4 (temporary)
instruction start
move immediate (32bit) 3 (temporary) <- 9
move (32bit) 4 (temporary) <- r2 (global)
binary arithmetic (32bit) 4 (temporary) <- 4 (temporary) - 3 (temporary)
move (32bit) r3 (global) <- 4 (temporary)
instruction start
move immediate (32bit) 3 (temporary) <- 32
move (32bit) 4 (temporary) <- r2 (global)
binary arithmetic (32bit) NF (global) <- 4 (temporary) - 3 (temporary)
move (32bit) ZF (global) <- NF (global)
set conditional (32bit) CF (global) <- 4 (temporary) (unsigned)>= 3 (temporary)
binary arithmetic (32bit) VF (global) <- NF (global) ^ 4 (temporary)
binary arithmetic (32bit) 5 (temporary) <- 4 (temporary) ^ 3 (temporary)
binary arithmetic (32bit) VF (global) <- VF (global) & 5 (temporary)
move (32bit) 4 (temporary) <- NF (global)
instruction start
move immediate (32bit) 3 (temporary) <- 0
branch conditional (32bit) 1 if ZF (global) == 3 (temporary)
move immediate (32bit) 3 (temporary) <- 4
move (32bit) 4 (temporary) <- r3 (global)
binary arithmetic (32bit) NF (global) <- 4 (temporary) - 3 (temporary)
move (32bit) ZF (global) <- NF (global)
set conditional (32bit) CF (global) <- 4 (temporary) (unsigned)>= 3 (temporary)
binary arithmetic (32bit) VF (global) <- NF (global) ^ 4 (temporary)
binary arithmetic (32bit) 5 (temporary) <- 4 (temporary) ^ 3 (temporary)
binary arithmetic (32bit) VF (global) <- VF (global) & 5 (temporary)
move (32bit) 4 (temporary) <- NF (global)
set label 1
instruction start
move (32bit) 3 (temporary) <- r12 (global)
move (32bit) r1 (global) <- 3 (temporary)
instruction start
unary arithmetic (32bit) 3 (temporary) <- - CF (global)
binary arithmetic (32bit) 3 (temporary) <- 3 (temporary) & ZF (global)
move immediate (32bit) 4 (temporary) <- 0
branch conditional (32bit) 2 if 3 (temporary) == 4 (temporary)
goto block 0
move immediate (32bit) pc (global, program counter) <- 35568
exit block (started at 0x8acc)
set label 2
goto block 1
move immediate (32bit) pc (global, program counter) <- 35556
exit block (started at 0x8acc)
set label 0
exit block (started at 0x8acc)
translation block start (guest address 0x8ae4)
host load (32bit) 3 (temporary) <- read(env (global), offset=18446744073709551600, bit_width=32)
move immediate (32bit) 4 (temporary) <- 0
branch conditional (32bit) 0 if 3 (temporary) (signed)< 4 (temporary)
instruction start
move (32bit) 3 (temporary) <- r0 (global)
move (32bit) 4 (temporary) <- r1 (global)
binary arithmetic (32bit) NF (global) <- 4 (temporary) - 3 (temporary)
move (32bit) ZF (global) <- NF (global)
set conditional (32bit) CF (global) <- 4 (temporary) (unsigned)>= 3 (temporary)
binary arithmetic (32bit) VF (global) <- NF (global) ^ 4 (temporary)
binary arithmetic (32bit) 5 (temporary) <- 4 (temporary) ^ 3 (temporary)
binary arithmetic (32bit) VF (global) <- VF (global) & 5 (temporary)
move (32bit) 4 (temporary) <- NF (global)
instruction start
move immediate (32bit) 3 (temporary) <- 1
move (32bit) 4 (temporary) <- r1 (global)
binary arithmetic (32bit) 4 (temporary) <- 4 (temporary) - 3 (temporary)
move (32bit) r12 (global) <- 4 (temporary)
instruction start
unary arithmetic (32bit) 3 (temporary) <- - CF (global)
binary arithmetic (32bit) 3 (temporary) <- 3 (temporary) & ZF (global)
move immediate (32bit) 4 (temporary) <- 0
branch conditional (32bit) 1 if 3 (temporary) == 4 (temporary)
goto block 0
move immediate (32bit) pc (global, program counter) <- 35532
exit block (started at 0x8ae4)
set label 1
goto block 1
move immediate (32bit) pc (global, program counter) <- 35568
exit block (started at 0x8ae4)
set label 0
exit block (started at 0x8ae4)